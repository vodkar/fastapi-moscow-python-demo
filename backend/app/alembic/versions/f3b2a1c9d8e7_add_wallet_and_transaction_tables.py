"""
Add wallet and transaction tables.

Revision ID: f3b2a1c9d8e7
Revises: d98dd8ec85a3
Create Date: 2025-09-15 12:30:00.000000

"""

import sqlalchemy as sa
import sqlmodel.sql.sqltypes
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "f3b2a1c9d8e7"
down_revision = "d98dd8ec85a3"
branch_labels: str | None = None
depends_on: str | None = None


def upgrade() -> None:
    """Upgrade database schema."""
    # ### commands auto generated by Alembic - please adjust! ###

    # Create wallet table
    op.create_table(
        "wallet",
        sa.Column("id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("user_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("balance", sa.DECIMAL(precision=10, scale=2), nullable=False),
        sa.Column(
            "currency", sqlmodel.sql.sqltypes.AutoString(length=3), nullable=False
        ),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_wallet_user_id"), "wallet", ["user_id"], unique=False)
    op.create_index(
        "ix_wallet_user_currency", "wallet", ["user_id", "currency"], unique=True
    )

    # Create transaction table
    op.create_table(
        "transaction",
        sa.Column("id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("wallet_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("amount", sa.DECIMAL(precision=10, scale=2), nullable=False),
        sa.Column(
            "type", sa.Enum("credit", "debit", name="transactiontype"), nullable=False
        ),
        sa.Column("timestamp", sa.DateTime(), nullable=False),
        sa.Column(
            "currency", sqlmodel.sql.sqltypes.AutoString(length=3), nullable=False
        ),
        sa.Column("description", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.ForeignKeyConstraint(
            ["wallet_id"],
            ["wallet.id"],
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_transaction_wallet_id"), "transaction", ["wallet_id"], unique=False
    )
    op.create_index(
        op.f("ix_transaction_timestamp"), "transaction", ["timestamp"], unique=False
    )

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade database schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_transaction_timestamp"), table_name="transaction")
    op.drop_index(op.f("ix_transaction_wallet_id"), table_name="transaction")
    op.drop_table("transaction")
    op.drop_index("ix_wallet_user_currency", table_name="wallet")
    op.drop_index(op.f("ix_wallet_user_id"), table_name="wallet")
    op.drop_table("wallet")

    # Drop the enum type
    op.execute("DROP TYPE IF EXISTS transactiontype")
    # ### end Alembic commands ###
